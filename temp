
def get_pretty_queue() :
    print_queue_msg = ''

    for key, queue_name in queue_names_dict.items():
        queue = r_obj.get_queue(key)
        case_count = r_obj.get_eng_case_count(key)

        print_queue_msg += f'{queue_name}: '
        # eng_idx = -1
        for eng_idx, cec, c_count in zip(range(len(queue)), queue, case_count):
            # eng_idx += 1
            cec_p = str(cec)

            if r_obj.db.exists(f'{cec_p}_on_call') :
                cec_p = '*' + cec_p
            

            eng_available_state = r_obj.get_idx_eng_availability(eng_idx, key)
            match eng_available_state:

                          
                case '1':
                    ## Full Day NC
                    cec_p += '(NC)'
                
                case '2' :                
                    cec_p += '(OQ)'
                
                case '3':
                    ## First-Half NC
                    cec_p += '(FH-NC, '
                
                case '4':
                    ## Second Half NC
                    cec_p += '(SH-NC, '
                case '5' :
                    cec_p += '(FH-OQ, '
                
                case '6' :
                    cec_p += '(SH-OQ, '
                
                case '7':
                    ## FH-NC, SH_DND
                    cec_p += '(FH-NC/SH-DND)'
                case '8':
                    ## FH-NC, SH_DND
                    cec_p += '(FH-HD, '
                case '9':
                    ## FH-NC, SH_DND
                    cec_p += '(SH-HD, '
                case '10':
                    cec_p += '(FH-ESC, '
                case '11':
                    cec_p += '(SH-ESC, '
                case '12':
                    cec_p += '(QM, '
            
            nc_content = r_obj.get_nc_time(cec)
            if(nc_content != None):
                if(cec_p[-2] == ','):
                    cec_p += 'NC-{' + nc_content + '}, '
                else:
                    cec_p+= '(NC-{' + nc_content + '}, '

            s_calls = r_obj.get_all_scheduled_calls(cec)
            nc_content = r_obj.get_nc_time(cec)

            if len(s_calls) > 0 :
                if eng_available_state not in ['3', '4', '5', '6', '8', '9', '10', '11', '12'] and not nc_content :
                    cec_p = cec_p + '('
                for sc in s_calls :
                    cec_p += str(sc) + ', '
                cec_p = cec_p[:-2]
                cec_p += ')'
            elif eng_available_state in ['3', '4', '5', '6', '8', '9', '10', '11', '12'] :
                cec_p = cec_p[:-2]
                cec_p += ')'


            print_queue_msg += f'{cec_p}:{c_count} '
        
        print_queue_msg.strip()
        print_queue_msg += '\n\n'

    return print_queue_msg







def check_specific_time_nc_marked(cec_id: str) :
    nc_content = r_obj.get_nc_time(cec_id)
    if nc_content != None :
        start_str, end_str = nc_content.split('-')[0], nc_content.split('-')[1]
        start_time = date.now().replace(hour = int(start_str.split(':')[0]), minute = int(start_str.split(':')[1]), second = 0, microsecond = 0)
        end_time = date.now().replace(hour = int(end_str.split(':')[0]), minute = int(end_str.split(':')[1]), second = 0, microsecond = 0)
        current_time = date.now()
        if current_time >= start_time and current_time <= end_time :
            return False
    return True





        if check_specific_time_nc_marked(cec_id) == False :
            return False

